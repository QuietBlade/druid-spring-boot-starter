server:
    port: 8080
spring:
    application:
        name: Druid
    datasource:
        type: com.alibaba.druid.pool.DruidDataSource
        druid:
            name: druid
            url: jdbc:mysql://localhost:3306/database?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
            username: root
            password: '123456'
            driver-class-name: com.mysql.cj.jdbc.Driver
            # druid配置初始化时建立物理连接的个数, 最大,最小连接池数量
            initial-size: 1
            min-idle: 5
            max-active: 20
            # 获取连接时最大等待时间，单位毫秒。
            max-wait: 6000
            # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            time-between-eviction-runs-millis: 2000
            # 配置一个连接在池中最小,最大生存的时间，单位是毫秒
            min-evictable-idle-time-millis: 600000
            max-evictable-idle-time-millis: 900000
            # 用来检测连接是否有效的sql，要求是一个查询语句
            validation-query: "select 1"

            # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
            test-while-idle: true
            # 申请连接时执行validationQuery检测连接是否有效，开启这个配置会降低性能。
            test-on-borrow: false
            # 归还连接时执行validationQuery检测连接是否有效，开启这个配置会降低性能。
            test-on-return: false

            # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
            keep-alive: true
            phy-max-use-count: 1000

            # 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
            # 监控统计用的filter:stat
            # 日志用的filter:log4j
            # 防御sql注入的filter:wall
            filters: stat,slf4j
            # filter 配置
            filter:
                slf4j:
                    enabled: true
                    # 不显示创建语句之前和执行完成之后的日志 (无论开启与否都不会放到文件中)
                    statement-create-after-log-enabled: false
                    statement-close-after-log-enabled: false
                    # 不显示返回结果之前和之后的日志
                    result-set-open-after-log-enabled: false
                    result-set-close-after-log-enabled: false
                    # 以下是关闭断开连接的日志显示
                    connection-close-after-log-enabled: false
                    connection-connect-after-log-enabled: false
                    connection-connect-before-log-enabled: false
            # 监控页面
            stat-view-servlet:
                # 开启Druid自带监控页面
                enabled: true
                # 访问的链接
                url-pattern: /druid/*
                # 允许重置日志
                reset-enable: true
                # 登录名和密码 都为空则不需要登录 , 若密码为空则生成随机值,打印在日志中|访问monitor页面的密码
                login-username: admin
                login-password: admin
                # 允许访问此监控的ip , 可以是ip格式 也可以是网络格式
                allow: 127.0.0.1,192.168.1.0/24
                # 拒绝的优先级比 allow 要高
                deny:
            # WebStatFilter URI接口请求过滤
            web-stat-filter:
                enabled: true
                url-pattern: /api/*
                exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
                # 开启会话统计
                session-stat-enable: true
                # session最大状态数量
                session-stat-max-count: 1000
                # 是否开启性能监控, 记录接口执行的详细信息
                profile-enable: true
                # 用户权限信息的 cookie 和 session 属性名称
                principal-cookie-name:
                principal-session-name:
            # 开启 Spring 监控 , 使用 x.y.z.service.* 作为匹配,多个用,(逗号)分割
            aop-patterns: com.example.Druid.mapper.*

#mybatis:
#    configuration:
#        log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
